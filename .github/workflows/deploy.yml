name: Deploy to Ubuntu Server

env:
  ACTIONS_STEP_DEBUG: false

on:
  push:
    branches:
      - master

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Actions
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: oakis/nextjs-app:latest
          build-args: |
            APIKEY=${{ secrets.APIKEY }}
            COOKIE=${{ secrets.COOKIE }}
            NEXT_PUBLIC_DATADOG_APPID=${{ secrets.NEXT_PUBLIC_DATADOG_APPID }}
            NEXT_PUBLIC_DATADOG_TOKEN=${{ secrets.NEXT_PUBLIC_DATADOG_TOKEN }}

      - name: Create SSH Key
        run: |
          mkdir -p /home/runner/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > /home/runner/.ssh/id_rsa
          chmod 600 /home/runner/.ssh/id_rsa

      - name: SSH and Deploy
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key_path: /home/runner/.ssh/id_rsa
          script: |
            docker pull oakis/nextjs-app:latest
            docker stop nextjs-app || true
            docker rm nextjs-app || true
            docker run -d -p 3000:3000 --name nextjs-app oakis/nextjs-app:latest

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Upload Datadog Sourcemaps
        env:
          DATADOG_SITE: "datadoghq.eu"
          DATADOG_API_HOST: "api.datadoghq.eu"
          DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
        run: |
          npm install
          npm run build
          npm install -g @datadog/datadog-ci
          datadog-ci sourcemaps upload ./.next/ \
            --service=nextjs-app \
            --release-version=${{ github.sha }} \
            --minified-path-prefix=https://bits.oakis.se/_next/

      - name: Clear Cloudflare Cache
        run: |
          curl https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache \
            -H 'Content-Type: application/json' \
            -H "X-Auth-Email: ${{ secrets.CLOUDFLARE_EMAIL }}" \
            -H "X-Auth-Key: ${{ secrets.CLOUDFLARE_API_KEY }}" \
            -d '{ "purge_everything": true }'
